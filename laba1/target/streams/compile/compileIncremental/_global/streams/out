[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\HiOrder.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Animal.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Classes.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Functions.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Patterns.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(D:\Projects\FP\laba1\src\main\scala\Patterns.scala, D:\Projects\FP\laba1\src\main\scala\HiOrder.scala, D:\Projects\FP\laba1\src\main\scala\Functions.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Animal.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\HigherOrder$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Bird$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\Functions.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Bird.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Lose$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Mammal.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Rock$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Result.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Meat$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Vegetables$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Food.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Draw$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Win$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Scissor$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Mammal$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Fish$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Paper$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Hand.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Fish.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\HigherOrder.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\Functions$.class, C:\Users\basha\Downloads\scalaUniversity-master\laba1\target\scala-2.12\classes\exercise1\PatternMatching$Plants$.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(exercise1.PatternMatching.Fish, exercise1.PatternMatching.Meat, exercise1.PatternMatching.Rock, exercise1.PatternMatching.Hand, exercise1.PatternMatching.Paper, exercise1.PatternMatching.Scissor, exercise1.PatternMatching, exercise1.PatternMatching.Bird, exercise1.PatternMatching.Food, exercise1.Functions, exercise1.PatternMatching.Vegetables, exercise1.PatternMatching.Win, exercise1.PatternMatching.Result, exercise1.HigherOrder, exercise1.PatternMatching.Mammal, exercise1.PatternMatching.Draw, exercise1.PatternMatching.Lose, exercise1.PatternMatching.Animal, exercise1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\HiOrder.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Functions.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Patterns.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(exercise1.PatternMatching.Fish, exercise1.PatternMatching.Meat, exercise1.PatternMatching.Rock, exercise1.PatternMatching.Hand, exercise1.PatternMatching.Paper, exercise1.PatternMatching.Scissor, exercise1.PatternMatching, exercise1.PatternMatching.Bird, exercise1.PatternMatching.Food, exercise1.Functions, exercise1.PatternMatching.Vegetables, exercise1.PatternMatching.Win, exercise1.PatternMatching.Result, exercise1.HigherOrder, exercise1.PatternMatching.Mammal, exercise1.PatternMatching.Draw, exercise1.PatternMatching.Lose, exercise1.PatternMatching.Animal, exercise1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(D:\Projects\FP\laba1\src\main\scala\HiOrder.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\HiOrder.scala, D:\Projects\FP\laba1\src\main\scala\Patterns.scala, D:\Projects\FP\laba1\src\main\scala\Functions.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Functions.scala, C:\Users\basha\Downloads\scalaUniversity-master\laba1\src\main\scala\Patterns.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Fish, exercise1.PatternMatching.Meat, exercise1.PatternMatching.Rock, exercise1.PatternMatching.Hand, exercise1.PatternMatching.Paper, exercise1.PatternMatching.Scissor, exercise1.PatternMatching, exercise1.PatternMatching.Bird, exercise1.PatternMatching.Food, exercise1.Functions, exercise1.PatternMatching.Vegetables, exercise1.PatternMatching.Win, exercise1.PatternMatching.Result, exercise1.HigherOrder, exercise1.PatternMatching.Mammal, exercise1.PatternMatching.Draw, exercise1.PatternMatching.Lose, exercise1.PatternMatching.Animal, exercise1.PatternMatching.Plants[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Paper by exercise1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Scissor by exercise1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Vegetables by exercise1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Plants by exercise1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Draw by exercise1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding exercise1.PatternMatching.Lose by exercise1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all sources: number of invalidated sources > 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 3 Scala sources to D:\Projects\FP\laba1\target\scala-2.12\classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.3.5:compile for Scala 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 7b18a60f for Scala compiler version 2.12.10[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	C:\Program Files\Java\jre1.8.0_241\lib\resources.jar;C:\Program Files\Java\jre1.8.0_241\lib\rt.jar;C:\Program Files\Java\jre1.8.0_241\lib\sunrsasign.jar;C:\Program Files\Java\jre1.8.0_241\lib\jsse.jar;C:\Program Files\Java\jre1.8.0_241\lib\jce.jar;C:\Program Files\Java\jre1.8.0_241\lib\charsets.jar;C:\Program Files\Java\jre1.8.0_241\lib\jfr.jar;C:\Program Files\Java\jre1.8.0_241\classes;C:\Users\basha\.sbt\boot\scala-2.12.10\lib\scala-library.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	D:\Projects\FP\laba1\target\scala-2.12\classes[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 10.3013835 s[0m
[0m[[0m[0mdebug[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Paper...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Paper[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Paper,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Paper,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Paper has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Paper,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Meat...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Meat[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Meat,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(Meat,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Meat has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(Meat,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Lose...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Lose[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Lose,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Lose has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Win...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Win[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Win)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Win,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Win,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Win has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Win,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Win)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.Functions...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.Functions[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.Functions)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.Functions,ModifiedNames(changes = UsedName(rectangleAreaCurried,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(rectangleArea,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(testRectangleUc,[Default]), UsedName(testRectangleCurried,[Default]), UsedName(Functions,[Default]), UsedName(testCircle,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(circleArea,[Default]))) invalidates 1 classes due to The exercise1.Functions has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(rectangleAreaCurried,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(rectangleArea,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(testRectangleUc,[Default]), UsedName(testRectangleCurried,[Default]), UsedName(Functions,[Default]), UsedName(testCircle,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(circleArea,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.Functions)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Win...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Win[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Win)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Win,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Win,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Win has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Win,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Win)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Mammal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Mammal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Mammal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Mammal,ModifiedNames(changes = UsedName(weight,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(laba1;PatternMatching;Mammal;init;,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(copy$default$3,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Mammal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(weight,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(laba1;PatternMatching;Mammal;init;,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(copy$default$3,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Mammal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Plants...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Plants[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Plants,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Plants,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Plants has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Plants,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Vegetables...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Vegetables[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Vegetables)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Vegetables,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Vegetables has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Vegetables)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Animal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Animal,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Animal,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Animal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Animal,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Animal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching,ModifiedNames(changes = UsedName(testWinsA,[Default]), UsedName(Result,[Default]), UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(PatternMatching,[Default]), UsedName(testExtractMammalWeight,[Default]), UsedName(equals,[Default]), UsedName(testIntToString,[Default]), UsedName(Rock,[Default]), UsedName(Fish,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(testIsMaxAndMoritz,[Default]), UsedName(testIsEven,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(Animal,[Default]), UsedName(isEven,[Default]), UsedName(IsMaxAndMoritz,[Default]), UsedName(Meat,[Default]), UsedName(at,[Default]), UsedName(retWeight,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(testUpdateFood,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(winsA,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(change,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(Plants,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]), UsedName(Win,[Default]), UsedName(Paper,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(testWinsA,[Default]), UsedName(Result,[Default]), UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(PatternMatching,[Default]), UsedName(testExtractMammalWeight,[Default]), UsedName(equals,[Default]), UsedName(testIntToString,[Default]), UsedName(Rock,[Default]), UsedName(Fish,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(testIsMaxAndMoritz,[Default]), UsedName(testIsEven,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(Animal,[Default]), UsedName(isEven,[Default]), UsedName(IsMaxAndMoritz,[Default]), UsedName(Meat,[Default]), UsedName(at,[Default]), UsedName(retWeight,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(testUpdateFood,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(winsA,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(change,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(Plants,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]), UsedName(Win,[Default]), UsedName(Paper,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Bird...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Bird[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Bird)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Bird,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(laba1;PatternMatching;Bird;init;,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Bird has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(laba1;PatternMatching;Bird;init;,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Bird)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Rock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Rock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Rock)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Rock,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(Rock,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Rock has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(Rock,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Rock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.HigherOrder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.HigherOrder[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.HigherOrder)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.HigherOrder,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(plus,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(nTimes,[Default]), UsedName(HigherOrder,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(multiply,[Default]), UsedName(testAnonymousNTimes,[Default]), UsedName(clone,[Default]), UsedName(testNTimes,[Default]), UsedName(an,[Default]))) invalidates 1 classes due to The laba1.HigherOrder has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(plus,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(nTimes,[Default]), UsedName(HigherOrder,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(multiply,[Default]), UsedName(testAnonymousNTimes,[Default]), UsedName(clone,[Default]), UsedName(testNTimes,[Default]), UsedName(an,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.HigherOrder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Scissor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Scissor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Scissor,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Scissor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Paper...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Paper[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Paper,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Paper,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Paper has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Paper,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching,ModifiedNames(changes = UsedName(testWinsA,[Default]), UsedName(Result,[Default]), UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(PatternMatching,[Default]), UsedName(testExtractMammalWeight,[Default]), UsedName(equals,[Default]), UsedName(testIntToString,[Default]), UsedName(Rock,[Default]), UsedName(Fish,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(testIsMaxAndMoritz,[Default]), UsedName(testIsEven,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(Animal,[Default]), UsedName(isEven,[Default]), UsedName(IsMaxAndMoritz,[Default]), UsedName(Meat,[Default]), UsedName(at,[Default]), UsedName(retWeight,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(testUpdateFood,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(winsA,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(change,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(Plants,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]), UsedName(Win,[Default]), UsedName(Paper,[Default]))) invalidates 1 classes due to The laba1.PatternMatching has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(testWinsA,[Default]), UsedName(Result,[Default]), UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(PatternMatching,[Default]), UsedName(testExtractMammalWeight,[Default]), UsedName(equals,[Default]), UsedName(testIntToString,[Default]), UsedName(Rock,[Default]), UsedName(Fish,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(testIsMaxAndMoritz,[Default]), UsedName(testIsEven,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(Animal,[Default]), UsedName(isEven,[Default]), UsedName(IsMaxAndMoritz,[Default]), UsedName(Meat,[Default]), UsedName(at,[Default]), UsedName(retWeight,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(testUpdateFood,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(winsA,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(change,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(Plants,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]), UsedName(Win,[Default]), UsedName(Paper,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.Functions...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.Functions[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.Functions)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.Functions,ModifiedNames(changes = UsedName(rectangleAreaCurried,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(rectangleArea,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(testRectangleUc,[Default]), UsedName(testRectangleCurried,[Default]), UsedName(Functions,[Default]), UsedName(testCircle,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(circleArea,[Default]))) invalidates 1 classes due to The laba1.Functions has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(rectangleAreaCurried,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(rectangleArea,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(testRectangleUc,[Default]), UsedName(testRectangleCurried,[Default]), UsedName(Functions,[Default]), UsedName(testCircle,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(circleArea,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.Functions)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Lose...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Lose[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Lose,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Lose has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(Lose,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Fish...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Fish[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Fish,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(Fish,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(laba1;PatternMatching;Fish;init;,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Fish has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(Fish,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(laba1;PatternMatching;Fish;init;,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Food...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Food)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Food,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Food has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Food)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Plants...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Plants[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Plants,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Plants,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Plants has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Plants,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Plants)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Draw...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Draw[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Draw)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Draw,ModifiedNames(changes = UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Draw has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Draw)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Food...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Meat by laba1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Vegetables by laba1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Plants by laba1.PatternMatching.Food[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Plants, laba1.PatternMatching.Vegetables, laba1.PatternMatching.Food, laba1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Food,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]))) invalidates 4 classes due to The laba1.PatternMatching.Food has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(Food,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Plants, laba1.PatternMatching.Vegetables, laba1.PatternMatching.Food, laba1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Result...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Result)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Result,ModifiedNames(changes = UsedName(Result,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Result has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Result,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Result)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Scissor...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Scissor[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Scissor,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Scissor has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(Scissor,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Scissor)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Animal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Bird by laba1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Fish by laba1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Mammal by laba1.PatternMatching.Animal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Mammal, laba1.PatternMatching.Bird, laba1.PatternMatching.Animal, laba1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Animal,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Animal,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The laba1.PatternMatching.Animal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Animal,[Default]), UsedName(name,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Mammal, laba1.PatternMatching.Bird, laba1.PatternMatching.Animal, laba1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Mammal...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Mammal[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Mammal)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Mammal,ModifiedNames(changes = UsedName(weight,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(exercise1;PatternMatching;Mammal;init;,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(copy$default$3,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Mammal has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(weight,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(exercise1;PatternMatching;Mammal;init;,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(Mammal,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(copy$default$3,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Mammal)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Rock...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Rock[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Rock)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Rock,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(Rock,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Rock has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(Rock,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Rock)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Hand...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Hand)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Hand,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(clone,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Hand has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Hand)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Vegetables...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Vegetables[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Vegetables)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Vegetables,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Vegetables has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(Vegetables,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Vegetables)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Result...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Win by laba1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Draw by laba1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Lose by laba1.PatternMatching.Result[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Result, laba1.PatternMatching.Draw, laba1.PatternMatching.Win, laba1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Result,ModifiedNames(changes = UsedName(Result,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The laba1.PatternMatching.Result has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Result,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Result, laba1.PatternMatching.Draw, laba1.PatternMatching.Win, laba1.PatternMatching.Lose)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Draw...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Draw[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Draw)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Draw,ModifiedNames(changes = UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Draw has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(Draw,[Default]), UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Draw)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Meat...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Meat[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Meat,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(Meat,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The laba1.PatternMatching.Meat has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(productIterator,[Default]), UsedName(Meat,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Meat)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.HigherOrder...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.HigherOrder[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.HigherOrder)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.HigherOrder,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(plus,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(nTimes,[Default]), UsedName(HigherOrder,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(multiply,[Default]), UsedName(testAnonymousNTimes,[Default]), UsedName(clone,[Default]), UsedName(testNTimes,[Default]), UsedName(an,[Default]))) invalidates 1 classes due to The exercise1.HigherOrder has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(plus,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(nTimes,[Default]), UsedName(HigherOrder,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(multiply,[Default]), UsedName(testAnonymousNTimes,[Default]), UsedName(clone,[Default]), UsedName(testNTimes,[Default]), UsedName(an,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.HigherOrder)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from laba1.PatternMatching.Hand...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: laba1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Paper by laba1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Scissor by laba1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding laba1.PatternMatching.Rock by laba1.PatternMatching.Hand[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(laba1.PatternMatching.Hand, laba1.PatternMatching.Rock, laba1.PatternMatching.Scissor, laba1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(laba1.PatternMatching.Hand,ModifiedNames(changes = UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(clone,[Default]))) invalidates 4 classes due to The laba1.PatternMatching.Hand has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(notify,[Default]), UsedName(==,[Default]), UsedName(notifyAll,[Default]), UsedName(equals,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Hand,[Default]), UsedName(clone,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(laba1.PatternMatching.Hand, laba1.PatternMatching.Rock, laba1.PatternMatching.Scissor, laba1.PatternMatching.Paper)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Bird...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Bird[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Bird)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Bird,ModifiedNames(changes = UsedName(exercise1;PatternMatching;Bird;init;,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Bird has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(exercise1;PatternMatching;Bird;init;,[Default]), UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(Bird,[Default]), UsedName(clone,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Bird)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from exercise1.PatternMatching.Fish...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: exercise1.PatternMatching.Fish[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(exercise1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(exercise1.PatternMatching.Fish,ModifiedNames(changes = UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(Fish,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(exercise1;PatternMatching;Fish;init;,[Default]), UsedName(productElement,[Default]))) invalidates 1 classes due to The exercise1.PatternMatching.Fish has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(apply,[Default]), UsedName(notify,[Default]), UsedName(food,[Default]), UsedName(unapply,[Default]), UsedName(==,[Default]), UsedName(copy$default$1,[Default]), UsedName(notifyAll,[Default]), UsedName(copy$default$2,[Default]), UsedName(equals,[Default]), UsedName(copy,[Default]), UsedName(Fish,[Default]), UsedName($init$,[Default]), UsedName(ne,[Default]), UsedName(##,[Default]), UsedName(toString,[Default]), UsedName(hashCode,[Default]), UsedName(wait,[Default]), UsedName(productPrefix,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(curried,[Default]), UsedName(name,[Default]), UsedName(productIterator,[Default]), UsedName(productArity,[Default]), UsedName(!=,[Default]), UsedName($isInstanceOf,[Default]), UsedName(asInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(eq,[Default]), UsedName(finalize,[Default]), UsedName(canEqual,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tupled,[Default]), UsedName(clone,[Default]), UsedName(exercise1;PatternMatching;Fish;init;,[Default]), UsedName(productElement,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(exercise1.PatternMatching.Fish)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: [0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
